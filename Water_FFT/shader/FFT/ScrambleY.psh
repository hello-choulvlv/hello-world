/**************FFT Scramble Y PixelShader*******************/
;Tex0  Scramble Texture
;Tex1  Source Texture
;c0  Half Tap偏移量，格式：0.5/Width, 0.5/Height
;t0		顶点内插后的纹理坐标，同时也表示当前处理像素在图像中的坐标，因为纹理和RT的分辨率完全相同


#define HalfTap c0
#define TexCoord r0				;当前处理像素在纹理中的坐标
#define ScrambleTexCoord r1	;
#define SwapTexCoord r2
#define SwapTexelColor r3


ps.2.0
dcl_2d s0
dcl_2d s1
dcl t0

def c1, 1, 1, 1, 1

;将内插后的纹理坐标修正1/2 tap
add TexCoord, t0, HalfTap
	;注意ScrambleTexture只有一列，所以x值衡定1/2 tap
mov ScrambleTexCoord.x, HalfTap.x
mov ScrambleTexCoord.y, TexCoord.y

;得到Swap点的坐标（在y分量中），这已经是加过1/2 tap的了
texld SwapTexCoord, ScrambleTexCoord, s0
	;X轴对齐（复制当前像素的x坐标）以便寻址原图
mov SwapTexCoord.x, TexCoord.x

;直接寻址原图
texld SwapTexelColor, SwapTexCoord, s1
;写入即可
mov oC0, SwapTexelColor
